def knapsack_01(weights, values, capacity):
    n = len(weights)
    dp = [[0] * (capacity + 1) for _ in range(n + 1)]

    for i in range(1, n + 1):
        for c in range(1, capacity + 1):
            if weights[i - 1] <= c:
                dp[i][c] = max(values[i - 1] + dp[i - 1][c - weights[i - 1]], dp[i - 1][c])
            else:
                dp[i][c] = dp[i - 1][c]
                
    i = n
    j = c
    included=[0] * i
    
    while (i > 0 and j > 0):
        if (dp[i][j] == dp[i-1][j]):
            i -= 1;
        else:
            i -= 1
            included[i] = 1
            j -= weights[i]

    return dp[n][capacity], included

weights = [10, 20, 30]
values = [60, 100, 120]
capacity = 50

max_value = knapsack_01(weights, values, capacity)
print("Maximum value:", max_value)